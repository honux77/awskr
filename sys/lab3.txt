System Operations - Lab 3: Managing Storage in AWS (Windows) - 2.1
==================================================================================================================

Using this command reference. 

==================================================================================================================

1. Locate the section you need. Each section in this file matches a section in the lab instructions.


2. Replace items in angle brackets - [ ] - with appropriate values. For example, in this command you would replace the value - [JobFlowID] - (including the brackets) with the parameter indicated in the lab instructions: 

   elastic-mapreduce --list [JobFlowID]. 

   You can also use find and replace to change bracketed parameters in bulk.

3. Do NOT enable the Word Wrap feature in Windows Notepad or the text editor you use to view this file.



++++1. Configuring a New Instance++++


==================================================================================================================
1.5 Create Amazon EC2 Instance
==================================================================================================================

1.5.8 Paste text into User data field

<powershell>

Set-ExecutionPolicy Unrestricted -Force

# Download and install latest stable AWS CLI MSI for 64bit
New-Item -ItemType directory -Path 'C:\temp', 'C:\temp\aws'

$webclient = New-Object System.Net.WebClient
$webclient.DownloadFile('https://s3.amazonaws.com/aws-cli/AWSCLI64.msi','C:\temp\aws\AWSCLI64.msi')
Start-Process 'C:\temp\aws\AWSCLI64.msi' -ArgumentList /qn -Wait

# Download AWS for .NET SDK so that we have AWS Powershell commands available. 
$webclient.DownloadFile('https://us-west-2-aws-training.s3.amazonaws.com/awsu-ilt/sys-ops/v2.1/lab-3-storage-windows/static/AWSToolsAndSDKForNet_sdk.msi', 'c:\temp\aws\AWSNETSDK.msi')
Start-Process 'c:\temp\aws\AWSNETSDK.msi' -ArgumentList /qn -Wait

</powershell>


++++2. Taking Snapshots of Your Instance++++


==================================================================================================================
2.2 Take an Initial Snapshot
==================================================================================================================

2.2.2 Obtain a full description of the Processor instance

aws ec2 describe-instances --filter 'Name=tag:Name,Values=Processor'

2.2.3 Refine description to include only VolumeId of Amazon EBS volume

aws ec2 describe-instances --filter 'Name=tag:Name,Values=Processor' --query 'Reservations[0].Instances[0].BlockDeviceMappings[0].Ebs.{VolumeId:VolumeId}'

2.2.4 Obtain instance ID of Processor instance

aws ec2 describe-instances --filters 'Name=tag:Name,Values=Processor' --query 'Reservations[0].Instances[0].InstanceId'

2.2.5 Stop Processor instance

aws ec2 stop-instances --instance-ids [instance-id]

2.2.6 Check status of stop action

aws ec2 describe-instance-status --instance-id [instance-id]

2.2.7 Create first snapshot

aws ec2 create-snapshot --volume-id [volume-id]

2.2.8 Report on snapshot status

aws ec2 describe-snapshots --snapshot-id [snapshot-id]

2.2.9 Restart Processor instance

aws ec2 start-instances --instance-ids [instance-id]

2.2.10 Check status of start action

aws ec2 describe-instance-status --instance-id [instance-id]

==================================================================================================================
2.3 Schedule Creation of Subsequent Snapshots
==================================================================================================================

2.3.1 Execute the following command

type C:\Users\Administrator\.aws\config

2.3.3 Create backup.bat

aws ec2 create-snapshot --volume-id [volume-id] --region [region] >c:\temp\output.txt 2>&1

2.3.4 Create batch logon user 

net user backupuser passw0rd! /ADD

2.3.5 Grant backupuser batch logon privileges

c:\temp\ntrights +R SeBatchLogonRight -u backupuser

2.3.6 Schedule task

schtasks /create /sc MINUTE /mo 1 /tn "Volume Backup Task" /ru backupuser /rp passw0rd! /tr c:\temp\backup.bat

2.3.7 Verify that snapshots are being created

aws ec2 describe-snapshots --filters "Name=volume-id,Values=[volume-id]"

==================================================================================================================
2.4 Retain Only Last Two Snapshots 
==================================================================================================================

2.4.1 Remove scheduled tasks

schtasks /Delete /tn "Volume Backup Task"

2.4.3 Verify the current number of snapshots for the volume

aws ec2 describe-snapshots --filters "Name=volume-id,Values=[volume-id]" --query 'Snapshots[*].SnapshotId'

2.4.4 Execute snapshotter.ps1

c:\temp\snapshotter.ps1 [region]

2.4.5 Re-examine the current number of snapshots for the volume

aws ec2 describe-snapshots --filters "Name=volume-id,Values=[volume-id]" --query 'Snapshots[*].SnapshotId'


++++3. Moving Log Files to Amazon S3++++


==================================================================================================================
3.2 Move a Log File into Amazon S3
==================================================================================================================

3.2.1 Configure the AWS CLI

aws configure

3.2.3 Download loggen.sh

(New-Object System.Net.WebClient).DownloadFile("https://us-west-2-aws-training.s3.amazonaws.com/awsu-ilt/sys-ops/v2.1/lab-3-storage-windows/static/loggen.ps1", "c:\temp\loggen.ps1")

3.2.4 Run loggen.ps1

c:\temp\loggen.ps1

3.2.7 Change directories

cd \temp

3.2.8 Move file into Amazon S3

aws s3 mv timestamp.log "s3://[s3-bucket-name]/logfiles/timestamp-$(Get-Date -Format 'M-d-yyyy-h:m:s')"

3.2.9 Move file again

aws s3 mv timestamp.log "s3://[s3-bucket-name]/logfiles/timestamp-$(Get-Date -Format 'M-d-yyyy-h:m:s')"

3.2.10 List the contents of your Amazon S3 bucket

aws s3 ls s3://[s3-bucket-name]

3.2.11 List all objects containing the /logfiles/ prefix

aws s3 ls s3://[s3-bucket-name]/logfiles/

3.2.12 Move oldest file to /logfiles/archive/ prefix

aws s3 mv s3://[s3-bucket-name]/logfiles/[file-name] s3://[s3-bucket-name]/logfiles/archive/[file-name]

3.2.13 Verify move

aws s3 ls s3://[s3-bucket-name]/logfiles/



++++4. Challenge Solution - Synchronize Folder with Amazon S3++++

==================================================================================================================
4.1 Download and Unzip Sample Files
==================================================================================================================

4.1.1 Download files

(New-Object System.Net.WebClient).DownloadFile("https://us-west-2-aws-training.s3.amazonaws.com/awsu-ilt/sys-ops/v2.1/lab-3-storage-windows/static/files.zip", "c:\temp\files.zip")


==================================================================================================================
4.2 Synchronize Files
==================================================================================================================

4.2.1 Set versioning on bucket 

aws s3api put-bucket-versioning --bucket [s3-bucket-name] --versioning-configuration Status=Enabled

4.2.2 Synchronize files

aws s3 sync files s3://[s3-bucket-name]/files/

4.2.3 Confirm your files on Amazon S3

aws s3 ls s3://[s3-bucket-name]/files/

4.2.4 Delete file1.txt

del files\file1.txt

4.2.5 Synchronize, requesting deletion of files no longer in the source directory

aws s3 sync files s3://[s3-bucket-name]/files/ --delete

4.2.6 Verify that the item was deleted in Amazon S3

aws s3 ls s3://[s3-bucket-name]/files/

4.2.7 Find past versions of file1.txt

aws s3api list-object-versions --bucket [s3-bucket-name] --prefix files/file1.txt
 
4.2.8 Restore previous version of file to local file system

aws s3api get-object --bucket [s3-bucket-name] --key files/file1.txt --version-id [version-id] files/file1.txt

4.2.9 Verify that the file has been restored locally 

dir files

4.2.10 Re-sync the folder to Amazon S3

aws s3 sync files s3://[s3-bucket-name]/files/

4.2.11 Verify that the file has been restored to the bucket

aws s3 ls s3://[s3-bucket-name]/files/




Â© 2013, 2014 Amazon Web Services, Inc. or its affiliates. All rights reserved.